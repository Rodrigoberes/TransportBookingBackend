basePath: /
definitions:
  models.Booking:
    properties:
      booking_code:
        type: string
      booking_status:
        type: string
      created_at:
        type: string
      departure_datetime:
        type: string
      id:
        type: integer
      notes:
        type: string
      passenger_document:
        type: string
      passenger_name:
        type: string
      passenger_phone:
        type: string
      payment_method:
        type: string
      payment_status:
        type: string
      schedule_id:
        type: integer
      total_amount:
        type: number
      travel_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Company:
    properties:
      address:
        type: string
      created_at:
        type: string
      cuit:
        type: string
      email:
        type: string
      icon:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  models.Route:
    properties:
      base_price:
        type: number
      company_id:
        type: integer
      created_at:
        type: string
      destination_city:
        type: string
      destination_terminal:
        type: string
      distance_km:
        type: integer
      estimated_duration_minutes:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      origin_city:
        type: string
      origin_terminal:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      document_number:
        type: string
      document_type:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for transport booking system
  title: Transport Booking API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /bookings:
    get:
      consumes:
      - application/json
      description: Get list of bookings for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
      summary: Get bookings for user
      tags:
      - bookings
    post:
      consumes:
      - application/json
      description: Create a new booking
      parameters:
      - description: Booking data
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.Booking'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new booking
      tags:
      - bookings
  /bookings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a booking by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete booking
      tags:
      - bookings
    get:
      consumes:
      - application/json
      description: Get booking information by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get booking by ID
      tags:
      - bookings
    put:
      consumes:
      - application/json
      description: Update booking information
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Booking data
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.Booking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update booking
      tags:
      - bookings
  /companies:
    get:
      consumes:
      - application/json
      description: Get list of all companies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Company'
            type: array
      summary: Get all companies
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Create a new company
      parameters:
      - description: Company data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Company'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new company
      tags:
      - companies
  /companies/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a company by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete company
      tags:
      - companies
    get:
      consumes:
      - application/json
      description: Get company information by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get company by ID
      tags:
      - companies
    put:
      consumes:
      - application/json
      description: Update company information
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      - description: Company data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update company
      tags:
      - companies
  /routes:
    get:
      consumes:
      - application/json
      description: Get list of all routes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Route'
            type: array
      summary: Get all routes
      tags:
      - routes
    post:
      consumes:
      - application/json
      description: Create a new route
      parameters:
      - description: Route data
        in: body
        name: route
        required: true
        schema:
          $ref: '#/definitions/models.Route'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Route'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new route
      tags:
      - routes
  /routes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a route by ID
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete route
      tags:
      - routes
    get:
      consumes:
      - application/json
      description: Get route information by ID
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Route'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get route by ID
      tags:
      - routes
    put:
      consumes:
      - application/json
      description: Update route information
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: integer
      - description: Route data
        in: body
        name: route
        required: true
        schema:
          $ref: '#/definitions/models.Route'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Route'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update route
      tags:
      - routes
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user information by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user
      tags:
      - users
swagger: "2.0"
